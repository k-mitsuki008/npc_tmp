name: Backend Api Multi-Stage Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Stage for deployment
        required: true
        options:
          - dev
          - stg
          - prd

jobs:
  api-build-deploy:
    runs-on: ubuntu-22.04
    env:
      ID: hogehoge
      ENV: ${{ github.event.inputs.environment }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Set environment-specific secrets
        id: set-secrets
        run: |
          if [ "${{ env.ENV }}" == "dev" ]; then
            echo "SECRET_ARN=${{ secrets.DEV_AWS_IAM_ROLE_ARN }}" >> $GITHUB_ENV
            echo "SECRET_ACCOUNT_ID=${{ secrets.DEV_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "SECRET_MONITORING_ACCOUNT_ID=${{ secrets.MONITORING_DEV_ACCOUNT_ID }}" >> $GITHUB_ENV
          elif [ "${{ env.ENV }}" == "stg" ]; then
            echo "SECRET_ARN=${{ secrets.STG_AWS_IAM_ROLE_ARN }}" >> $GITHUB_ENV
            echo "SECRET_ACCOUNT_ID=${{ secrets.STG_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "SECRET_MONITORING_ACCOUNT_ID=${{ secrets.MONITORING_STG_ACCOUNT_ID }}" >> $GITHUB_ENV
          elif [ "${{ env.ENV }}" == "prd" ]; then
            echo "SECRET_ARN=${{ secrets.PRD_AWS_IAM_ROLE_ARN }}" >> $GITHUB_ENV
            echo "SECRET_ACCOUNT_ID=${{ secrets.PRD_ACCOUNT_ID }}" >> $GITHUB_ENV
            echo "SECRET_MONITORING_ACCOUNT_ID=${{ secrets.MONITORING_PRD_ACCOUNT_ID }}" >> $GITHUB_ENV
          fi
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - uses: aws-actions/setup-sam@v2
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: "ap-northeast-1"
          role-to-assume: ${{ env.SECRET_ARN }}

      - name: sam build for environment
        run: |
          cd ./backend
          sam build

      - name: sam deploy for environment
        run: |
          cd ./backend
          SAM_CLI_POLL_DELAY=5
          sam deploy --config-env ${{ env.ENV }} \
            --parameter-overrides \
              EnvType=${{ env.ENV }} \
              EventState=ENABLED \
              LambdaAutoPublishCodeSha256=${{ github.sha }} \
              MonitoringAccountId=${{ env.SECRET_MONITORING_ACCOUNT_ID }} \
              AlarmSnsTopicArn=/${{ env.ENV }}/sns/error/arn \
            --no-fail-on-empty-changeset